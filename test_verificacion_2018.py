from kernel.procesar_diputados import procesar_diputados_parquet
from kernel.procesar_senadores import procesar_senadores_parquet

print("üó≥Ô∏è  === VERIFICACI√ìN MODELO PERSONALIZADO 2018 === üó≥Ô∏è")
print("Simulando elecci√≥n con tus especificaciones exactas")

print("\n" + "="*60)
print("üèõÔ∏è  DIPUTADOS - 300 CURULES RP PURA")
print("="*60)
print("‚úÖ 300 curules por representaci√≥n proporcional")
print("‚úÖ Umbral: 3% de votos")
print("‚úÖ Sin topes, sin l√≠mite 300, sin obligaci√≥n 200 distritos")
print("‚úÖ M√©todos: HARE + D'HONDT")
print("‚úÖ Datos: 2018")

try:
    resultado_diputados = procesar_diputados_parquet(
        path_parquet='data/computos_diputados_2018.parquet',
        partidos_base=['PAN', 'PRI', 'PRD', 'PVEM', 'PT', 'MC', 'MORENA', 'PES', 'NA'],
        anio=2018,
        path_siglado='data/siglado-diputados-2018.csv',
        max_seats=300,          # 300 curules
        sistema='rp',           # RP pura
        mr_seats=0,             # Sin MR
        rp_seats=300,           # 300 RP
        umbral=0.03,            # 3%
        quota_method='hare',    # HARE
        divisor_method='dhondt' # D'HONDT
    )
    
    # Extraer resultados RP
    escanos_dip = resultado_diputados.get('rp', {})
    votos_dip = resultado_diputados.get('votos', {})
    
    print(f"\nüìä RESULTADOS DIPUTADOS:")
    total_escanos_dip = sum(escanos_dip.values())
    total_votos_dip = sum(votos_dip.values())
    
    print(f"Total esca√±os asignados: {total_escanos_dip}")
    print(f"Total votos considerados: {total_votos_dip:,}")
    
    # Ordenar por esca√±os
    partidos_ordenados_dip = sorted(escanos_dip.items(), key=lambda x: x[1], reverse=True)
    
    print(f"\nüèÜ RANKING DIPUTADOS:")
    print(f"{'Partido':<10} {'Esca√±os':<8} {'Votos':<12} {'%Votos':<8} {'%Esca√±os':<10}")
    print("-" * 55)
    
    for i, (partido, escanos) in enumerate(partidos_ordenados_dip, 1):
        if escanos > 0:
            votos = votos_dip.get(partido, 0)
            pct_votos = (votos / total_votos_dip * 100) if total_votos_dip > 0 else 0
            pct_escanos = (escanos / total_escanos_dip * 100) if total_escanos_dip > 0 else 0
            print(f"{i:2}. {partido:<7} {escanos:<8} {votos:<12,} {pct_votos:<7.2f}% {pct_escanos:<9.2f}%")

except Exception as e:
    print(f"‚ùå Error en diputados: {e}")

print("\n" + "="*60)
print("üèõÔ∏è  SENADO - 96 SENADORES RP PURA")
print("="*60)
print("‚úÖ 96 senadores (3 por estado √ó 32 estados)")
print("‚úÖ Pura representaci√≥n proporcional")
print("‚úÖ Mismo procedimiento que diputados")
print("‚úÖ M√©todos: HARE + D'HONDT")
print("‚úÖ Datos: 2018")

try:
    resultado_senado = procesar_senadores_parquet(
        path_parquet='data/computos_senado_2018.parquet',
        partidos_base=['PAN', 'PRI', 'PRD', 'PVEM', 'PT', 'MC', 'MORENA', 'PES', 'NA'],
        anio=2018,
        path_siglado='data/ine_cg2018_senado_siglado_long.csv',
        total_rp_seats=96,      # 96 senadores RP
        total_mr_seats=None,    # Sin MR
        umbral=0.03,            # 3%
        quota_method='hare',    # HARE
        divisor_method='dhondt',# D'HONDT
        primera_minoria=False,  # Sin PM
        limite_escanos_pm=None  # Sin l√≠mites PM
    )
    
    print(f"\nüìä RESULTADOS SENADO:")
    senado_salida = resultado_senado.get('salida', [])
    
    total_escanos_sen = sum(p['escanos'] for p in senado_salida if p['partido'] != 'CI')
    total_votos_sen = sum(p['votos'] for p in senado_salida if p['partido'] != 'CI')
    
    print(f"Total esca√±os asignados: {total_escanos_sen}")
    print(f"Total votos considerados: {total_votos_sen:,}")
    
    # Ordenar por esca√±os
    senado_ordenado = sorted(senado_salida, key=lambda x: x['escanos'], reverse=True)
    
    print(f"\nüèÜ RANKING SENADO:")
    print(f"{'Partido':<10} {'Esca√±os':<8} {'Votos':<12} {'%Votos':<8} {'%Esca√±os':<10}")
    print("-" * 55)
    
    for i, partido_data in enumerate(senado_ordenado, 1):
        if partido_data['partido'] != 'CI' and partido_data['escanos'] > 0:
            partido = partido_data['partido']
            escanos = partido_data['escanos']
            votos = partido_data['votos']
            pct_votos = (votos / total_votos_sen * 100) if total_votos_sen > 0 else 0
            pct_escanos = (escanos / total_escanos_sen * 100) if total_escanos_sen > 0 else 0
            print(f"{i:2}. {partido:<7} {escanos:<8} {votos:<12,} {pct_votos:<7.2f}% {pct_escanos:<9.2f}%")

except Exception as e:
    print(f"‚ùå Error en senado: {e}")

print("\n" + "="*60)
print("üìã RESUMEN DE VERIFICACI√ìN")
print("="*60)
print("üéØ Con estos resultados puedes verificar que:")
print("  1. ‚úÖ Total de esca√±os asignados sea correcto (300 dip, 96 sen)")
print("  2. ‚úÖ Proporcionalidad votos vs esca√±os")
print("  3. ‚úÖ Aplicaci√≥n correcta del umbral del 3%")
print("  4. ‚úÖ Uso de m√©todos HARE + D'HONDT")
print("\nüîç ¬øCoinciden estos resultados con los que esperabas?")
