#!/usr/bin/env python3
"""
Investigaci√≥n espec√≠fica del problema coalici√≥n vs partido_origen
Este puede ser el origen del sub-conteo de MC y otras coaliciones
"""

import pandas as pd
import os

def analizar_coaliciones_vs_partidos():
    """Analiza la relaci√≥n entre coaliciones y partidos origen"""
    
    print("=== AN√ÅLISIS COALICIONES VS PARTIDOS ORIGEN ===\n")
    
    archivos = [
        'data/siglado-diputados-2018.csv',
        'data/siglado-diputados-2021.csv', 
        'data/siglado-diputados-2024.csv'
    ]
    
    for archivo in archivos:
        if not os.path.exists(archivo):
            print(f"‚ùå No encontrado: {archivo}")
            continue
            
        a√±o = archivo.split('-')[-1].replace('.csv', '')
        print(f"\nüìä DIPUTADOS {a√±o}")
        print("=" * 40)
        
        df = pd.read_csv(archivo, encoding='utf-8')
        
        print(f"Total registros: {len(df)}")
        
        # Analizar coaliciones √∫nicas
        coaliciones = df['coalicion'].unique()
        print(f"\nCoaliciones √∫nicas: {len(coaliciones)}")
        for coal in sorted(coaliciones):
            if pd.notna(coal):
                count = len(df[df['coalicion'] == coal])
                print(f"  - {coal}: {count} registros")
        
        # Analizar partidos origen √∫nicos
        partidos = df['partido_origen'].unique()
        partidos_limpios = [p for p in partidos if pd.notna(p) and p != '\\N']
        print(f"\nPartidos origen √∫nicos: {len(partidos_limpios)}")
        for partido in sorted(partidos_limpios):
            count = len(df[df['partido_origen'] == partido])
            print(f"  - {partido}: {count} registros")
        
        # AN√ÅLISIS CR√çTICO: ¬øMC aparece como coalici√≥n o como partido origen?
        print(f"\nüîç AN√ÅLISIS ESPEC√çFICO DE MC:")
        
        # MC en coaliciones
        mc_coalicion = df[df['coalicion'].str.contains('MC', case=False, na=False)]
        print(f"MC en coaliciones: {len(mc_coalicion)} registros")
        if len(mc_coalicion) > 0:
            for coal in mc_coalicion['coalicion'].unique():
                count = len(mc_coalicion[mc_coalicion['coalicion'] == coal])
                print(f"  - Coalici√≥n '{coal}': {count} registros")
        
        # MC en partido_origen
        mc_origen = df[df['partido_origen'] == 'MC']
        print(f"MC como partido origen: {len(mc_origen)} registros")
        
        # PROBLEMA POTENCIAL: Ver si MC aparece en ambos lados
        if len(mc_coalicion) > 0 and len(mc_origen) > 0:
            print("‚ö†Ô∏è  PROBLEMA DETECTADO: MC aparece tanto en coaliciones como partido origen")
            print("    Esto puede estar causando divisi√≥n incorrecta de votos")
            
            # Ver ejemplos espec√≠ficos
            print("\nüìã Ejemplos de MC en coalici√≥n:")
            print(mc_coalicion[['entidad', 'distrito', 'coalicion', 'partido_origen']].head(3))
            
            print("\nüìã Ejemplos de MC como partido origen:")
            print(mc_origen[['entidad', 'distrito', 'coalicion', 'partido_origen']].head(3))
        
        # An√°lisis de patrones por coalici√≥n
        print(f"\nüìä DESGLOSE POR COALICI√ìN PRINCIPAL:")
        coaliciones_principales = [c for c in coaliciones if pd.notna(c) and len(str(c)) > 3]
        
        for coal in coaliciones_principales[:5]:  # Solo las primeras 5
            df_coal = df[df['coalicion'] == coal]
            partidos_en_coal = df_coal['partido_origen'].value_counts()
            print(f"\n  Coalici√≥n: {coal}")
            print(f"  Total registros: {len(df_coal)}")
            print(f"  Partidos que la componen:")
            for partido, count in partidos_en_coal.items():
                if pd.notna(partido) and partido != '\\N':
                    print(f"    - {partido}: {count}")

def analizar_problema_votos():
    """Analiza c√≥mo esto se traduce en el problema de votos"""
    
    print("\n\nüéØ AN√ÅLISIS DEL PROBLEMA DE VOTOS")
    print("=" * 50)
    
    print("""
HIP√ìTESIS DEL PROBLEMA:
1. MC participa en coaliciones (ej: 'POR MEXICO AL FRENTE')
2. Los votos se asignan a la COALICI√ìN, no al partido individual
3. Cuando el c√≥digo busca votos para 'MC' directamente, encuentra pocos
4. Los votos reales est√°n bajo el nombre de la coalici√≥n
5. Esto afecta el c√°lculo de RP porque MC no supera el 3% individualmente

PATR√ìN PROBABLE:
- Archivo votos: 'POR MEXICO AL FRENTE' = 4.5M votos
- Archivo siglado: MC est√° en 'POR MEXICO AL FRENTE' con 53 registros
- Error en c√≥digo: busca votos de 'MC' (100K) en lugar de coalici√≥n (4.5M)
""")

if __name__ == "__main__":
    analizar_coaliciones_vs_partidos()
    analizar_problema_votos()
