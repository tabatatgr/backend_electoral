#!/usr/bin/env python3
"""
TEST FINAL: Verificar que las funciones del main.py est√°n correctamente conectadas
y usan la versi√≥n corregida del c√°lculo MR por votos
"""

import sys
sys.path.append('.')

# Importar las mismas funciones que usa main.py
from kernel.wrapper_tablero import procesar_diputados_tablero as procesar_diputados_parquet
from kernel.asignacion_por_estado import procesar_diputados_por_estado
from kernel.procesar_senadores import procesar_senadores_parquet

def test_conexion_main_corregida():
    """
    Verifica que las funciones conectadas al main.py usan la versi√≥n corregida
    """
    
    print("üîß TEST: Verificaci√≥n de conexi√≥n main.py con versi√≥n corregida")
    print("=" * 70)
    print("‚úÖ Verificando que las funciones del main.py usan c√°lculo MR correcto")
    print("=" * 70)
    
    # Par√°metros id√©nticos a lo que usar√≠a el frontend
    path_parquet_2021 = "data/computos_diputados_2021.parquet"
    path_siglado_2021 = "data/siglado-diputados-2021.csv"
    partidos_2021 = ['MORENA', 'PAN', 'PRI', 'PRD', 'PVEM', 'PT', 'MC', 'NA', 'RSP', 'FXM', 'PES']
    
    print("\nüìã ESCENARIO: Sistema Vigente (igual que frontend)")
    print("   ‚Ä¢ 300 MR + 200 RP")
    print("   ‚Ä¢ Umbral 3%")
    print("   ‚Ä¢ Funci√≥n: procesar_diputados_tablero (main.py)")
    
    try:
        # Ejecutar exactamente como lo har√≠a main.py
        resultado = procesar_diputados_parquet(
            path_parquet=path_parquet_2021,
            partidos_base=partidos_2021,
            anio=2021,
            path_siglado=path_siglado_2021,
            max_seats=500,
            sistema='mixto',
            mr_seats=300,
            rp_seats=200,
            umbral=0.03,
            quota_method='hare'
        )
        
        if 'tot' in resultado:
            escanos = resultado['tot']
            mr_escanos = resultado.get('mr', {})
            total_escanos = sum(escanos.values())
            total_mr = sum(mr_escanos.values())
            
            print(f"\n‚úÖ RESULTADO FUNCI√ìN MAIN:")
            print(f"   ‚Ä¢ Total esca√±os: {total_escanos}")
            print(f"   ‚Ä¢ MR esca√±os: {total_mr}")
            print(f"   ‚Ä¢ RP esca√±os: {total_escanos - total_mr}")
            
            # Verificar que est√° usando el c√°lculo correcto de MR
            if total_mr == 300:
                print(f"   üéâ CORRECTO: MR = 300 (calculado por votos)")
                
                # Mostrar algunos resultados clave
                print(f"\nüìä ESCA√ëOS PRINCIPALES:")
                for partido in ['MORENA', 'PAN', 'PRI', 'PRD', 'PVEM', 'PT', 'MC']:
                    if partido in escanos and escanos[partido] > 0:
                        mr = mr_escanos.get(partido, 0)
                        rp = escanos[partido] - mr
                        print(f"   {partido:>6}: {escanos[partido]:>3} total ({mr:>3} MR + {rp:>3} RP)")
                
                # Verificar estructura de respuesta
                claves_esperadas = ['tot', 'mr', 'rp', 'votos']
                claves_encontradas = [k for k in claves_esperadas if k in resultado]
                
                print(f"\nüîç ESTRUCTURA DE RESPUESTA:")
                print(f"   ‚Ä¢ Claves esperadas: {claves_esperadas}")
                print(f"   ‚Ä¢ Claves encontradas: {claves_encontradas}")
                
                if len(claves_encontradas) == len(claves_esperadas):
                    print(f"   ‚úÖ Estructura completa")
                    estado_conexion = "‚úÖ CONEXI√ìN PERFECTA"
                else:
                    print(f"   ‚ö†Ô∏è Faltan algunas claves")
                    estado_conexion = "‚ö†Ô∏è CONEXI√ìN PARCIAL"
                    
            else:
                print(f"   ‚ùå ERROR: MR = {total_mr} (deber√≠a ser 300)")
                estado_conexion = "‚ùå USANDO VERSI√ìN INCORRECTA"
                
        else:
            print("‚ùå ERROR: Estructura de resultado no reconocida")
            estado_conexion = "‚ùå ERROR DE ESTRUCTURA"
            
    except Exception as e:
        print(f"‚ùå ERROR: {str(e)}")
        estado_conexion = "‚ùå ERROR DE EJECUCI√ìN"
    
    print(f"\n" + "=" * 70)
    print(f"üìã VEREDICTO FINAL")
    print(f"=" * 70)
    print(f"üîó Estado de conexi√≥n: {estado_conexion}")
    
    if "PERFECTA" in estado_conexion:
        print(f"‚úÖ Las funciones del main.py est√°n correctamente conectadas")
        print(f"‚úÖ Usan la versi√≥n corregida del c√°lculo MR por votos") 
        print(f"‚úÖ El frontend recibir√° datos correctos")
        print(f"‚úÖ El tablero est√° listo para producci√≥n")
        
    elif "PARCIAL" in estado_conexion:
        print(f"‚ö†Ô∏è Las funciones funcionan pero faltan algunos datos")
        print(f"‚ö†Ô∏è Puede requerir ajustes menores")
        
    else:
        print(f"‚ùå Las funciones del main.py tienen problemas")
        print(f"‚ùå Requiere correcci√≥n antes del uso en producci√≥n")
    
    print(f"\nüéØ RESUMEN T√âCNICO:")
    print(f"   ‚Ä¢ Funci√≥n probada: kernel.wrapper_tablero.procesar_diputados_tablero")
    print(f"   ‚Ä¢ Misma funci√≥n que usa main.py")
    print(f"   ‚Ä¢ Par√°metros id√©nticos al frontend")
    print(f"   ‚Ä¢ Test de sistema vigente mexicano")
    
    return estado_conexion

if __name__ == "__main__":
    test_conexion_main_corregida()
